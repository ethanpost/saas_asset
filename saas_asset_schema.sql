
-- uninstall: drop table saas_asset_types cascade constraints purge;
exec drop_table('saas_asset_types');
begin
   if not does_table_exist('saas_asset_types') then 
      execute_sql('
      create table saas_asset_types (
      asset_type_id number generated by default on null as identity,
      asset_type_name varchar2(120) not null,
      root_id number not null,
      order_id number default 0,
      created date default sysdate not null,
      updated date default sysdate not null,
      allow_delete varchar2(1) default ''n'' not null,
      is_active varchar2(1) default ''y''
      )', false);
      execute_sql('alter table saas_asset_types add constraint pk_saas_asset_types primary key (asset_type_id)', false);
   end if;
end;
/

-- uninstall: drop sequence seq_saas_asset_id;
exec create_sequence('seq_saas_asset_id');

-- uninstall: drop table saas_asset cascade constraints purge;

exec drop_table('saas_asset');
begin
   if not does_table_exist('saas_asset') then 
      execute_sql('
      create table saas_asset (
      asset_id number,  
      asset_name varchar2(120) not null,
      asset_type_id number not null,
      root_id number,
      -- If asset name is not unqiue within root_id, we will use the root asset when trying to ref by name.
      is_root_asset varchar2(1) default ''y'',
      order_id number default null,
      created date default sysdate not null,
      created_by varchar2(120) not null,
      updated date default sysdate not null,
      updated_by varchar2(120) not null,
      allow_delete varchar2(1) default ''y'' not null,
      is_active varchar2(1) default ''y'',
      is_template varchar2(1) default ''n'',
      -- Validate? Must be set to y on insert or update and always gets set back to n in the trigger.
      skip_validate varchar2(1) default ''n'' not null,
      --
      label1 varchar2(120) default null,
      about1 varchar2(400) default null,
      id1 number default null,
      id1_type varchar2(120) default null,
      val1 varchar2(120) default null,
      is_required1 varchar2(12) default null,
      is_optional1 varchar2(12) default null,
      --
      label2 varchar2(120) default null,
      about2 varchar2(400) default null,
      id2 number default null,
      id2_type varchar2(120) default null,
      val2 varchar2(120) default null,
      is_required2 varchar2(12) default null,
      is_optional2 varchar2(12) default null,
      --
      label3 varchar2(120) default null,
      about3 varchar2(400) default null,
      id3 number default null,
      id3_type varchar2(120) default null,
      val3 varchar2(120) default null,
      is_required3 varchar2(12) default null,
      is_optional3 varchar2(12) default null,
      --
      label4 varchar2(120) default null,
      about4 varchar2(400) default null,
      id4 number default null,
      id4_type varchar2(120) default null,
      val4 varchar2(120) default null,
      is_required4 varchar2(12) default null,
      is_optional4 varchar2(12) default null,
      --
      label5 varchar2(120) default null,
      about5 varchar2(400) default null,
      id5 number default null,
      id5_type varchar2(120) default null,
      val5 varchar2(120) default null,
      is_required5 varchar2(12) default null,
      is_optional5 varchar2(12) default null,
      --
      label6 varchar2(120) default null,
      about6 varchar2(400) default null,
      id6 number default null,
      id6_type varchar2(120) default null,
      val6 varchar2(120) default null,
      is_required6 varchar2(12) default null,
      is_optional6 varchar2(12) default null,
      --
      label7 varchar2(120) default null,
      about7 varchar2(400) default null,
      id7 number default null,
      id7_type varchar2(120) default null,
      val7 varchar2(120) default null,
      is_required7 varchar2(12) default null,
      is_optional7 varchar2(12) default null,
      --
      label8 varchar2(120) default null,
      about8 varchar2(400) default null,
      id8 number default null,
      id8_type varchar2(120) default null,
      val8 varchar2(120) default null,
      is_required8 varchar2(12) default null,
      is_optional8 varchar2(12) default null,
      --
      label9 varchar2(120) default null,
      about9 varchar2(400) default null,
      id9 number default null,
      id9_type varchar2(120) default null,
      val9 varchar2(120) default null,
      is_required9 varchar2(12) default null,
      is_optional9 varchar2(12) default null,
      --
      label10 varchar2(120) default null,
      about10 varchar2(400) default null,
      id10 number default null,
      id10_type varchar2(120) default null,
      val10 varchar2(120) default null,
      is_required10 varchar2(12) default null,
      is_optional10 varchar2(12) default null,
      --
      label11 varchar2(120) default null,
      about11 varchar2(400) default null,
      id11 number default null,
      id11_type varchar2(120) default null,
      val11 varchar2(120) default null,
      is_required11 varchar2(12) default null,
      is_optional11 varchar2(12) default null,
      --
      label12 varchar2(120) default null,
      about12 varchar2(400) default null,
      id12 number default null,
      id12_type varchar2(120) default null,
      val12 varchar2(120) default null,
      is_required12 varchar2(12) default null,
      is_optional12 varchar2(12) default null,
      --
      label13 varchar2(120) default null,
      about13 varchar2(400) default null,
      id13 number default null,
      id13_type varchar2(120) default null,
      val13 varchar2(120) default null,
      is_required13 varchar2(12) default null,
      is_optional13 varchar2(12) default null,
      --
      label14 varchar2(120) default null,
      about14 varchar2(400) default null,
      id14 number default null,
      id14_type varchar2(120) default null,
      val14 varchar2(120) default null,
      is_required14 varchar2(12) default null,
      is_optional14 varchar2(12) default null,
      --
      label15 varchar2(120) default null,
      about15 varchar2(400) default null,
      id15 number default null,
      id15_type varchar2(120) default null,
      val15 varchar2(120) default null,
      is_required15 varchar2(12) default null,
      is_optional15 varchar2(12) default null,
      --
      label16 varchar2(120) default null,
      about16 varchar2(400) default null,
      id16 number default null,
      id16_type varchar2(120) default null,
      val16 varchar2(120) default null,
      is_required16 varchar2(12) default null,
      is_optional16 varchar2(12) default null,
      --
      label17 varchar2(120) default null,
      about17 varchar2(400) default null,
      id17 number default null,
      id17_type varchar2(120) default null,
      val17 varchar2(120) default null,
      is_required17 varchar2(12) default null,
      is_optional17 varchar2(12) default null,
      --
      label18 varchar2(120) default null,
      about18 varchar2(400) default null,
      id18 number default null,
      id18_type varchar2(120) default null,
      val18 varchar2(120) default null,
      is_required18 varchar2(12) default null,
      is_optional18 varchar2(12) default null,
      --
      label19 varchar2(120) default null,
      about19 varchar2(400) default null,
      id19 number default null,
      id19_type varchar2(120) default null,
      val19 varchar2(120) default null,
      is_required19 varchar2(12) default null,
      is_optional19 varchar2(12) default null,
      --
      label20 varchar2(120) default null,
      about20 varchar2(400) default null,
      id20 number default null,
      id20_type varchar2(120) default null,
      val20 varchar2(120) default null,
      is_required20 varchar2(12) default null,
      is_optional20 varchar2(12) default null
      )', false);
      execute_sql('alter table saas_asset add constraint pk_saas_asset primary key (asset_id)', false);
      execute_sql('alter table saas_asset add constraint saas_asset_fk_asset_type_id foreign key (asset_type_id) references saas_asset_types (asset_type_id) on delete cascade', false);
   end if;
end;
/

-- uninstall: drop table saas_asset_relation cascade constraints purge;
exec drop_table('saas_asset_relation');
begin
   if not does_table_exist('saas_asset_relation') then 
      execute_sql('
      create table saas_asset_relation (
      parent_asset_id number not null,
      child_asset_id number not null,
      order_id number default 0,
      created date default sysdate not null,
      updated date default sysdate not null,
      allow_delete varchar2(1) default ''y'' not null,
      is_active varchar2(1) default ''y''
      )', false);
      execute_sql('alter table saas_asset_relation add constraint pk_saas_asset_relation primary key (parent_asset_id, child_asset_id)', false);
      execute_sql('alter table saas_asset_relation add constraint saas_asset_relation_fk_parent_asset_id foreign key (parent_asset_id) references saas_asset (asset_id) on delete cascade', false);
      execute_sql('alter table saas_asset_relation add constraint saas_asset_relation_fk_child_asset_id foreign key (child_asset_id) references saas_asset (asset_id) on delete cascade', false);
   end if;
end;
/

exec drop_function('saas_asset_pipe');

exec drop_type('saas_asset_tab');

exec drop_type('saas_asset_row');

create type saas_asset_row as object (
   asset_name varchar2(120),
   asset_id number,
   asset_type_name varchar2(120));
/

create type saas_asset_tab is table of saas_asset_row;
/

create or replace function saas_asset_pipe (
   p_type_list in varchar2,
   p_root_id in number,
   p_is_template in varchar2 default 'n',
   p_is_root_asset in varchar2 default 'y') return saas_asset_tab pipelined as
   cursor assets (
      v_type_list in varchar2,
      v_root_id in number,
      v_is_template in varchar2 default 'n',
      v_is_root_asset in varchar2 default 'y') is 
   select a.asset_name, 
          a.asset_id,
          b.asset_type_name
     from saas_asset a,
          saas_asset_types b,
          (with 
           asset_types as (select p_type_list asset_type_list from dual)
           select trim(regexp_substr(asset_type_list, '[^,]+', 1, level)) asset_type_name 
             from asset_types
           connect by level <= regexp_count(asset_type_list, ',') + 1) c
    where a.root_id=v_root_id
      and b.asset_type_name=c.asset_type_name
      and a.asset_type_id=b.asset_type_id 
      and a.is_template=v_is_template
      and a.is_active='y' 
      and a.is_root_asset=v_is_root_asset;
begin
  for x in assets (v_type_list=>p_type_list, v_root_id=>p_root_id, v_is_template=>p_is_template, v_is_root_asset=>p_is_root_asset) loop
     pipe row(saas_asset_row(x.asset_name, x.asset_id, x.asset_type_name));
  end loop;
  return;
end;
/

create or replace view saas_asset_relation_v as (
select b.root_id parent_root_id,
       b.asset_id parent_id,
       b.asset_name parent_name,
       c.asset_type_name parent_type_name,
       d.asset_id child_id,
       d.asset_name child_name,
       e.asset_type_name child_type_name
  from saas_asset_relation a,
       saas_asset b,
       saas_asset_types c,
       saas_asset d,
       saas_asset_types e 
 where a.parent_asset_id=b.asset_id 
   and b.asset_type_id=c.asset_type_id
   and a.child_asset_id=d.asset_id
   and d.asset_type_id=e.asset_type_id);
